# -*- coding: utf-8 -*-
"""Drawing On Images.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1iO9es-6JZygMJQrVTilAxU1KY8S5snjZ
"""

import cv2
import numpy as np
from matplotlib import pyplot as plt

# define our imshow function
def imshow(title = "Image", imge = None, size = 10):
  w, h = image.shape[0], image.shape[1]
  aspect_ratio = w/h
  plt.figure(figsize = (size * aspect_ratio, size))
  plt.imshow(cv2.cvtColor(image, cv2.COLOR_BGR2RGB))
  plt.title(title)
  plt.show()

# Lets make a blank square canvas
image = np.zeros((512,512,3), np.uint8)

# can we make this in bacl and white? grayscale
image_gray = np.zeros((512,512), np.uint8)

# black would be the same as grayscale or color image (same for whtie)
imshow("Black Canvas - RBG Color", image)
imshow("Black Canvas - Grayscale", image_gray)

# Note this is an inplace operation, meaning it changes 
# the input imahe
# unlike many other opencv functions that return a new image
# leaving the input 
# remember our image was the black canvas
cv2.line(image, (0,0), (511,511), (255,127,0), 5)
imshow("Black Canvas With Diagonal Line", image)

# create our black canvas again because now it has a line in it
image = np.zeros((512,512,3), np.uint8)

# Thickness - if possible. Negative thickness menas that it is filled
cv2.rectangle(image, (100,100), (300,250), (127,50,127), 10)
imshow("Black Canvas With Pink Rectange", image)

# draw circles 

image = np.zeros((512,512,3), np.uint8)
cv2.circle(image, (350,350), 100, (15,150,50), -1)
imshow("Black Canvas With Green Circle", image)

# Polygon 

image = np.zeros((512,512,3), np.uint8)

# Let's define four points
pts = np.array( [[10,50], [400,50], [90,200], [50,500]], np.int32)

# Let's now reshape our points in form  required by polylines
pts = pts.reshape((-1,1,2))

cv2.polylines(image, [pts], True, (0,0,255), 3)
imshow("Black Canvas with Red Polygon", image)

pts = np.array( [[10,50], [400,50], [90,200], [50,500]], np.int32)
pts.shape
pts = pts.reshape((-1,1,2))
pts.shape
image = np.zeros((1000,1000,3), np.uint8)
ourString =  'Hello World!'
cv2.putText(image, ourString, (155,290), cv2.FONT_HERSHEY_SCRIPT_COMPLEX, 3, (40,200,0), 4)
imshow("Messing with some text", image)

